{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\nvar initialState = {\n  allIds: [],\n  byIds: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        var _action$payload = action.payload,\n            id = _action$payload.id,\n            content = _action$payload.content;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          allIds: [].concat(_toConsumableArray(state.allIds), [id]),\n          byIds: _objectSpread(_objectSpread({}, state.byIds), {}, _defineProperty({}, id, {\n            content: content,\n            completed: false\n          }))\n        });\n      }\n\n    case TOGGLE_TODO:\n      {\n        var _id = action.payload.id;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byIds: _objectSpread(_objectSpread({}, state.byIds), {}, _defineProperty({}, _id, _objectSpread(_objectSpread({}, state.byIds[_id]), {}, {\n            completed: !state.byIds[_id].completed\n          })))\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sazedul/Projects/RPL/frontend.employment/store/reducers/todos.js"],"names":["ADD_TODO","TOGGLE_TODO","initialState","allIds","byIds","state","action","type","payload","id","content","completed"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AAAe;AAAA,8BACaM,MAAM,CAACE,OADpB;AAAA,YACHC,EADG,mBACHA,EADG;AAAA,YACCC,OADD,mBACCA,OADD;AAEX,+CACOL,KADP;AAEIF,UAAAA,MAAM,+BAAME,KAAK,CAACF,MAAZ,IAAoBM,EAApB,EAFV;AAGIL,UAAAA,KAAK,kCACEC,KAAK,CAACD,KADR,2BAEAK,EAFA,EAEK;AACFC,YAAAA,OAAO,EAAPA,OADE;AAEFC,YAAAA,SAAS,EAAE;AAFT,WAFL;AAHT;AAWH;;AACD,SAAKV,WAAL;AAAkB;AAAA,YACNQ,GADM,GACCH,MAAM,CAACE,OADR,CACNC,EADM;AAEd,+CACOJ,KADP;AAEID,UAAAA,KAAK,kCACEC,KAAK,CAACD,KADR,2BAEAK,GAFA,kCAGMJ,KAAK,CAACD,KAAN,CAAYK,GAAZ,CAHN;AAIGE,YAAAA,SAAS,EAAE,CAACN,KAAK,CAACD,KAAN,CAAYK,GAAZ,EAAgBE;AAJ/B;AAFT;AAUH;;AACD;AACI,aAAON,KAAP;AA7BR;AA+BH","sourcesContent":["import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, content } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        content,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}