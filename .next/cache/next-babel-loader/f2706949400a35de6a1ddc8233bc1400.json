{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\nconst initialState = {\n  allIds: [],\n  byIds: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        const {\n          id,\n          content\n        } = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          allIds: [...state.allIds, id],\n          byIds: _objectSpread(_objectSpread({}, state.byIds), {}, {\n            [id]: {\n              content,\n              completed: false\n            }\n          })\n        });\n      }\n\n    case TOGGLE_TODO:\n      {\n        const {\n          id\n        } = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byIds: _objectSpread(_objectSpread({}, state.byIds), {}, {\n            [id]: _objectSpread(_objectSpread({}, state.byIds[id]), {}, {\n              completed: !state.byIds[id].completed\n            })\n          })\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/sazedul/Projects/RPL/frontend.employment/store/reducers/todos.js"],"names":["ADD_TODO","TOGGLE_TODO","initialState","allIds","byIds","state","action","type","id","content","payload","completed"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AAAe;AACX,cAAM;AAAEQ,UAAAA,EAAF;AAAMC,UAAAA;AAAN,YAAkBH,MAAM,CAACI,OAA/B;AACA,+CACOL,KADP;AAEIF,UAAAA,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAV,EAAkBK,EAAlB,CAFZ;AAGIJ,UAAAA,KAAK,kCACEC,KAAK,CAACD,KADR;AAED,aAACI,EAAD,GAAM;AACFC,cAAAA,OADE;AAEFE,cAAAA,SAAS,EAAE;AAFT;AAFL;AAHT;AAWH;;AACD,SAAKV,WAAL;AAAkB;AACd,cAAM;AAAEO,UAAAA;AAAF,YAASF,MAAM,CAACI,OAAtB;AACA,+CACOL,KADP;AAEID,UAAAA,KAAK,kCACEC,KAAK,CAACD,KADR;AAED,aAACI,EAAD,mCACOH,KAAK,CAACD,KAAN,CAAYI,EAAZ,CADP;AAEIG,cAAAA,SAAS,EAAE,CAACN,KAAK,CAACD,KAAN,CAAYI,EAAZ,EAAgBG;AAFhC;AAFC;AAFT;AAUH;;AACD;AACI,aAAON,KAAP;AA7BR;AA+BH","sourcesContent":["import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\n\nconst initialState = {\n    allIds: [],\n    byIds: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO: {\n            const { id, content } = action.payload;\n            return {\n                ...state,\n                allIds: [...state.allIds, id],\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        content,\n                        completed: false\n                    }\n                }\n            };\n        }\n        case TOGGLE_TODO: {\n            const { id } = action.payload;\n            return {\n                ...state,\n                byIds: {\n                    ...state.byIds,\n                    [id]: {\n                        ...state.byIds[id],\n                        completed: !state.byIds[id].completed\n                    }\n                }\n            };\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}