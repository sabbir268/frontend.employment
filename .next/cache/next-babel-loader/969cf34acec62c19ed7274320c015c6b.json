{"ast":null,"code":"var _jsxFileName = \"/Users/sazedul/Projects/RPL/frontend.employment/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Router from 'next/router';\nimport App from 'next/app';\nimport withRedux, { createWrapper } from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport initStore from '../store';\nimport '../styles/styles.scss';\nimport { library, config } from '@fortawesome/fontawesome-svg-core';\nconfig.autoAddCss = false;\nimport NProgress from 'nprogress'; //nprogress module\n\nimport 'nprogress/nprogress.css'; //styles of nprogress\n//Binding events. \n\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: initStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nconst makestore = () => initStore;\n\nconst wrapper = createWrapper(makestore);\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["/Users/sazedul/Projects/RPL/frontend.employment/pages/_app.js"],"names":["Router","App","withRedux","createWrapper","Provider","initStore","library","config","autoAddCss","NProgress","events","on","start","done","MyApp","render","Component","pageProps","props","makestore","wrapper"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,SAAP,IAAoBC,aAApB,QAAyC,oBAAzC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,OAAO,uBAAP;AAEA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mCAAhC;AACAA,MAAM,CAACC,UAAP,GAAoB,KAApB;AAEA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAmC;;AACnC,OAAO,yBAAP,C,CAAkC;AAClC;;AACAT,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMF,SAAS,CAACG,KAAV,EAA3C;AACAZ,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAMF,SAAS,CAACI,IAAV,EAA9C;AACAb,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMF,SAAS,CAACI,IAAV,EAA3C;;AAGA,MAAMC,KAAN,SAAoBb,GAApB,CAAwB;AACpBc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEb,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH;;AARmB;;AAWxB,MAAME,SAAS,GAAG,MAAMd,SAAxB;;AACA,MAAMe,OAAO,GAAGjB,aAAa,CAACgB,SAAD,CAA7B;AAEA,eAAeC,OAAO,CAAClB,SAAR,CAAkBY,KAAlB,CAAf","sourcesContent":["import Router from 'next/router';\nimport App from 'next/app';\n  \nimport withRedux, { createWrapper } from 'next-redux-wrapper';\nimport { Provider } from 'react-redux';\nimport initStore from '../store';\n\nimport '../styles/styles.scss';\n\nimport { library, config } from '@fortawesome/fontawesome-svg-core';\nconfig.autoAddCss = false;\n\nimport NProgress from 'nprogress'; //nprogress module\nimport 'nprogress/nprogress.css'; //styles of nprogress\n//Binding events. \nRouter.events.on('routeChangeStart', () => NProgress.start()); \nRouter.events.on('routeChangeComplete', () => NProgress.done()); \nRouter.events.on('routeChangeError', () => NProgress.done());\n\n\nclass MyApp extends App {\n    render() {\n        const { Component, pageProps } = this.props;\n        return (\n            <Provider store={initStore}>\n                <Component {...pageProps} />\n            </Provider>\n        );\n    }\n}\n\nconst makestore = () => initStore;\nconst wrapper = createWrapper(makestore);\n\nexport default wrapper.withRedux(MyApp);"]},"metadata":{},"sourceType":"module"}